<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- 
	    *root Context.xml
	    서버 구동과 동시에web.xml파일을 거쳐서 바로 로딩되는 문서
	    -서버구동과 동시에 세팅해야하는 내용들을 작성한다. 주로DB연결,트랜잭션처리 등등
	 -->
	 
	 <!-- DB연결 설정3단계 -->
	 <!-- 1단계 DB연결을 위한 도구 설정 -->
	 <bean class="org.apache.commons.dbcp.BasicDataSource" id="dataSource" destroy-method="close">
	 <!-- 어느DB에 접속할것인지 지정 -->
	 <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
	 <property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
	 <property name="username" value="spring"/>
	 <property name="password" value="spring"/>
	 </bean>
	 
	 <!-- 
	       객체가 필요할때 실행되는 코드
	       
	       BasicDataSource dataSource = new BasicDataSource();
	       dataSource.setDriverClassName("oracle.jdbc.driver.OrcleDriver")'
	       dataSource.setUrl("jdbc:oracle:thin:@localhost:1521:xe")
	       ...
	  -->
	 	
	 	<!-- 2단계 Mybatis Spring에서 제공하는 SQL 명령어실행을 위한 도구 등록 -->
	 	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
	 	    <!-- mybatis 설정파일 위치를 지정한다. -->
	 	    <property name="configLocation" value="classpath:mybatis-config.xml"/> <!-- classpath : resources를 의미 -->
	 	    <!-- 연결을 위한 도구 참조 -->
	 	    <property name="dataSource" ref="dataSource"/>
	 	</bean>
	 	
	 	<!-- 
	 	   SqlSessionFactoryBean sqlSessionFactory = new SqlSessionFactoryBean();
	 	   sqlSessionFactory.setConfigLocation("classpath:mybatis-config.xml");
	 	   sqlSessionFactory.dataSourec(dataSource);
	 	 -->
	 	 
	 	 <!-- 3단계 SQL 구문 실행으 ㄹ위한 템플릿을 제공하는 도구 등록 -->
	 	 <bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSession">
	 	     <!-- SQL 명령어 실행을 위한 도구에 대한 참조 설정 -->
	 	     <constructor-arg ref="sqlSessionFactory"></constructor-arg>
	 	 </bean>
	 	 
	 	 <!-- 
	 	    SqlSessionTemplate sqlSession = new SqlSessionTemplate(sqlSessionFactory);
	 	  -->
	 	  
	 	  <!-- 
	 	     property : setter 주입
	 	     construction : 
	 	   -->
</beans>
